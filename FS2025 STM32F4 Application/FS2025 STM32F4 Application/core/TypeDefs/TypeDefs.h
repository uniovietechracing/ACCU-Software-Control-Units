	/**
  ******************************************************************************
  * @file           : TypeDefs.h
  * @brief          : Typedefs header file
  ******************************************************************************
  * @attention
  *
  * (c) 2024 Uniovi E-tech Racing.
  * 
  *
  ******************************************************************************  
  ******************************************************************************
																Version Control
	******************************************************************************
	******************************************************************************		
  Version | dd mmm yyyy |       Who        | Description of changes
  ========|=============|==================|====================================
    1.0   | 01 MAR 2023 | Diego Rodríguez  | Creation
	========|=============|==================|====================================
	
  ******************************************************************************
  ******************************************************************************
  */

#ifndef TYPEDEFS_H
#define TYPEDEFS_H

/*******************************************************************************
********************************************************************************
***************										 Includes                      ***************	
********************************************************************************
*******************************************************************************/
#include "Control_Unit_Selection.h"
#include "Common_Functions.h"
#include "MCU.h"


/*******************************************************************************
********************************************************************************
***************									Boot Status        							 ***************
********************************************************************************
*******************************************************************************/
typedef enum
{
	BOOTLOADER_NO,
	BOOTLOADER_YES,
	BOOTLOADER_NEW_DEVICE=255
} Bootloader_Status_TypeDef;


/*******************************************************************************
********************************************************************************
***************												DEVICE       				  		 ***************
********************************************************************************
*******************************************************************************/
typedef struct
{
	uint8_t											Unique_ID[4];											
	uint8_t											Device;
	uint8_t											Version;
	BoolTypeDef									Reboot;
} Device_TypeDef;


/*******************************************************************************
********************************************************************************
***************												CAN TX       				  		 ***************
********************************************************************************
*******************************************************************************/
typedef struct
{
	uint16_t										ID;						//11 BITS for Standard ID
	uint8_t											DLC;					//Data Length
	uint8_t											Data[8];			//Data Array
	uint32_t           			    Mailbox;			//MAILBOX

} CAN_Tx_Message_TypeDef;


/*******************************************************************************
********************************************************************************
***************												CAN RX       				  		 ***************
********************************************************************************
*******************************************************************************/
typedef struct
{
	CAN_RxHeaderTypeDef					Header;
	uint8_t											Data[8];			//Data Array

} CAN_Rx_Message_TypeDef;


/*******************************************************************************
********************************************************************************
***************									Estructura TIMERS				    		 ***************
********************************************************************************
*******************************************************************************/
typedef struct
{
	Timer_10ms_TypeDef Status_Send_Timer;
	Timer_10ms_TypeDef Temp_Send_Timer;
	Timer_10ms_TypeDef Temp_Timeout_Timer;
	Timer_10ms_TypeDef Init_State_Timer;
	Timer_10ms_TypeDef Stabilize_Temp_Timer;
	Timer_10ms_TypeDef Read_Temp_Timer;

} Control_Unit_Time_TypeDef;

/*******************************************************************************
********************************************************************************
***************									Estructura Temperratures				 ***************
********************************************************************************
*******************************************************************************/
typedef struct
{
	int8_t Actual_Value;
	int8_t Last_Value;
	BoolTypeDef Failed;
	BoolTypeDef Disabled;
	BoolTypeDef Out_of_Range;
	
} Temperatures_Typedef;

/*******************************************************************************
********************************************************************************
***************									Estructura LTC6811				    	 ***************
********************************************************************************
*******************************************************************************/
typedef enum
{
	NO_BALANCING,
	EVEN_BALANCING,
	ODD_BALANCING=255
} Balancing_Status_TypeDef;


typedef struct {
    SPI_HandleTypeDef *SPI_Handler;
    GPIO_TypeDef *CS_PORT;
    uint16_t CS_PIN;
		uint8_t Config[6];
    Balancing_Status_TypeDef Balancing;
} LTC6811_Typdef;
/*******************************************************************************
********************************************************************************
***************									  STATUS Struct			        		 ***************
********************************************************************************
*******************************************************************************/
typedef struct
{
	float Voltages[24];
	Temperatures_Typedef Temperatures[24];
	uint8_t Temperatures_Failed;
	uint8_t Temperatures_Out_of_Range;
	Control_Unit_Time_TypeDef Timing;
	uint8_t Temperature_Message;
	LTC6811_Typdef LTC6811_1;
	LTC6811_Typdef LTC6811_2;

} Control_Unit_Status_Typdef;

/*******************************************************************************
********************************************************************************
***************									  enum    state				      		 ***************
********************************************************************************
*******************************************************************************/

typedef enum
{
	INIT,
	NORMAL_OPERATION,
	FAIL_MODE
} Control_Unit_State_Typdef;

/*******************************************************************************
********************************************************************************
***************											LED				      						 ***************
********************************************************************************
*******************************************************************************/
typedef enum
{
	PERMANENT_OFF,
	PERMANENT_ON,
	BLINKING,
	ONE_BLINK

} LEDs_Mode_Typdef;

typedef enum
{
	ON,
	OFF
} LEDs_State_Typdef;

typedef enum
{
	GREEN,
	YELLOW
} LEDs_Color_Typdef;

typedef struct
{
		LEDs_State_Typdef												State;
		LEDs_Mode_Typdef												Mode;
		LEDs_Mode_Typdef												Mode_ant;
		Timer_10ms_TypeDef											Led_Tim;
		LEDs_Color_Typdef												Color;
		unsigned int														Blink_Rate;
} Control_Unit_Led_Typedef;

/*******************************************************************************
********************************************************************************
***************							CAN CONTROL UNIT       				  		 ***************
********************************************************************************
*******************************************************************************/
typedef struct
{
	Device_TypeDef												Device;
	CAN_Tx_Message_TypeDef							  Tx_Message;
	CAN_Rx_Message_TypeDef							  Rx_Message;		
	Control_Unit_Time_TypeDef			    	  Timing;
	Control_Unit_State_Typdef						  State;
	Control_Unit_Status_Typdef						Status;
	Control_Unit_Led_Typedef							Green_Led;
	Control_Unit_Led_Typedef							Yellow_Led;
	
} Control_Unit_TypeDef;

#endif
	/*****************************************************************************
	** 																END OF FILE																**			
	******************************************************************************
	******************************************************************************
  ******************************************************************************
  * @file           : Common_Functions.h
  * @brief          : Common Functions and Typedefs header file
  ******************************************************************************
  * @attention
  *
  * (c) 2024 Uniovi E-tech Racing.
  * 
  *
  ******************************************************************************  
  ******************************************************************************
																Version Control
	******************************************************************************
	******************************************************************************		
  Version | dd mmm yyyy |       Who        | Description of changes
  ========|=============|==================|====================================
    1.0   | 01 MAR 2023 | Diego Rodríguez  | Creation
	========|=============|==================|====================================
	
  ******************************************************************************
  ******************************************************************************
*/


