<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [FS2024_CUBE\Application.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image FS2024_CUBE\Application.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6210000: Last Updated: Fri Jul  4 12:35:50 2025
<BR><P>
<H3>Maximum Stack Usage =        512 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; LTC6811_Measure_Temperatures_and_Voltages &rArr; LTC_Disable_Balancing_2 &rArr; LTC6811_wrcfg_2 &rArr; LTC681x_wrcfg_2 &rArr; write_68_2 &rArr; LTC6811_SPI_Write_Array_2 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[7d]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f4xx_it.o(.text.BusFault_Handler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[1e]">CAN1_RX0_IRQHandler</a> from stm32f4xx_it.o(.text.CAN1_RX0_IRQHandler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[1d]">CAN1_TX_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[48]">CAN2_RX0_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[49]">CAN2_RX1_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[4a]">CAN2_SCE_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[47]">CAN2_TX_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[15]">DMA1_Stream0_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[16]">DMA1_Stream1_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[17]">DMA1_Stream2_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream3_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream4_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream5_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream6_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[39]">DMA1_Stream7_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[42]">DMA2_Stream0_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[43]">DMA2_Stream1_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[44]">DMA2_Stream2_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[45]">DMA2_Stream3_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[46]">DMA2_Stream4_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[4c]">DMA2_Stream5_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[4d]">DMA2_Stream6_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[4e]">DMA2_Stream7_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f4xx_it.o(.text.DebugMon_Handler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[3a]">FMC_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[57]">FPU_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[5e]">HAL_Delay</a> from stm32f4xx_hal.o(.text.HAL_Delay) referenced from ltc6811_dual.o(.text.LTC6811_Measure_Temperatures_and_Voltages)
 <LI><a href="#[56]">HASH_RNG_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f4xx_it.o(.text.HardFault_Handler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[51]">I2C3_ER_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[50]">I2C3_EV_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f4xx_it.o(.text.MemManage_Handler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f4xx_it.o(.text.NMI_Handler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[4b]">OTG_FS_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[34]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[53]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[52]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[55]">OTG_HS_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[54]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f4xx_it.o(.text.PendSV_Handler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f4xx_it.o(.text.SVC_Handler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f4xx_it.o(.text.SysTick_Handler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[58]">SystemInit</a> from system_stm32f4xx.o(.text.SystemInit) referenced from startup_stm32f405xx.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[23]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[3c]">TIM5_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[40]">TIM6_DAC_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from stm32f4xx_it.o(.text.TIM7_IRQHandler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[36]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[5b]">Timer_10ms_Init</a> from common_functions.o(.text.Timer_10ms_Init) referenced from battery_pack_control_unit.o(.text.Battery_Pack_Control_Unit_Init)
 <LI><a href="#[5a]">Timer_10ms_Tick</a> from common_functions.o(.text.Timer_10ms_Tick) referenced from battery_pack_control_unit.o(.text.Battery_Pack_Control_Unit_10ms_Interrupt)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[4f]">USART6_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f4xx_it.o(.text.UsageFault_Handler) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f405xx.o(.text) referenced from startup_stm32f405xx.o(RESET)
 <LI><a href="#[59]">__main</a> from __main.o(!!!main) referenced from startup_stm32f405xx.o(.text)
 <LI><a href="#[5c]">wakeup_idle</a> from ltc681x.o(.text.wakeup_idle) referenced from ltc6811_dual.o(.text.LTC6811_Measure_Temperatures_and_Voltages)
 <LI><a href="#[5d]">wakeup_idle_2</a> from ltc681x.o(.text.wakeup_idle_2) referenced from ltc6811_dual.o(.text.LTC6811_Measure_Temperatures_and_Voltages)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[59]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(.text)
</UL>
<P><STRONG><a name="[5f]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[61]"></a>__scatterload_rt2</STRONG> (Thumb, 84 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[17c]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[17d]"></a>__scatterload_loop</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[62]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[17e]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, __scatter.o(!!handler_null), UNUSED)

<P><STRONG><a name="[17f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[6a]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[63]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[65]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000007))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[180]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[181]"></a>__rt_lib_init_relocate_pie_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[182]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[183]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[184]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[185]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[186]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000034))

<P><STRONG><a name="[187]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[188]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[189]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[18a]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[18b]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[18c]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[18d]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[18e]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[18f]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[190]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))

<P><STRONG><a name="[191]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000035))

<P><STRONG><a name="[192]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[193]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000027))

<P><STRONG><a name="[194]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[6f]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[195]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[196]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[197]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[198]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[199]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[19a]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[19b]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[60]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[19c]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[67]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[69]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[19d]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[6b]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; LTC6811_Measure_Temperatures_and_Voltages &rArr; LTC_Disable_Balancing_2 &rArr; LTC6811_wrcfg_2 &rArr; LTC681x_wrcfg_2 &rArr; write_68_2 &rArr; LTC6811_SPI_Write_Array_2 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[19e]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[7e]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[6e]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[19f]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[70]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f405xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f405xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[72]"></a>malloc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, h1_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_62
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_38
</UL>

<P><STRONG><a name="[75]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_68_2
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_68
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv_2
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>

<P><STRONG><a name="[c2]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>

<P><STRONG><a name="[1a0]"></a>_ll_udiv</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_CAN1_Init
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_SystemClock_Config
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>

<P><STRONG><a name="[1a1]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[1a2]"></a>__rt_memclr_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[1a3]"></a>_memset_w</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[1a4]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[1a5]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[1a6]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[1a7]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[1a8]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[1a9]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[1aa]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[77]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[66]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[79]"></a>__Heap_Initialize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[1ab]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[1ac]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[1ad]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[1ae]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[1af]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[1b0]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[1b1]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[6d]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[7b]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[7a]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[71]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[7f]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>

<P><STRONG><a name="[80]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[81]"></a>Battery_Pack_Control_Unit_10ms_Interrupt</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, battery_pack_control_unit.o(.text.Battery_Pack_Control_Unit_10ms_Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Battery_Pack_Control_Unit_10ms_Interrupt &rArr; State_LEDs_10ms_Tick &rArr; Timer_10ms_Tick
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;State_LEDs_10ms_Tick
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Unit_Timer_10ms_Interrupt
</UL>

<P><STRONG><a name="[83]"></a>Battery_Pack_Control_Unit_CAN1_Interrupt</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, battery_pack_control_unit.o(.text.Battery_Pack_Control_Unit_CAN1_Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Battery_Pack_Control_Unit_CAN1_Interrupt &rArr; Battery_Pack_Control_Unit_Cancel_Sensors &rArr; MCU_Flash_Program_Word &rArr; STM32F4_Flash_Program_Word &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Pack_Control_Unit_Cancel_Sensors
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Unit_CAN1_Interrupt
</UL>

<P><STRONG><a name="[84]"></a>Battery_Pack_Control_Unit_Cancel_Sensors</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, battery_pack_control_unit.o(.text.Battery_Pack_Control_Unit_Cancel_Sensors))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Battery_Pack_Control_Unit_Cancel_Sensors &rArr; MCU_Flash_Program_Word &rArr; STM32F4_Flash_Program_Word &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Flash_Program_Word
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Flash_Read_Word
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Pack_Control_Unit_CAN1_Interrupt
</UL>

<P><STRONG><a name="[87]"></a>Battery_Pack_Control_Unit_Init</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, battery_pack_control_unit.o(.text.Battery_Pack_Control_Unit_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = Battery_Pack_Control_Unit_Init &rArr; LTC6811_Init_2 &rArr; LTC6811_wrcfg_2 &rArr; LTC681x_wrcfg_2 &rArr; write_68_2 &rArr; LTC6811_SPI_Write_Array_2 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Init_2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Init_1
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_10ms_Start
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;State_LEDs_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Pack_Control_Unit_Init_Values
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Unit_Init
</UL>

<P><STRONG><a name="[89]"></a>Battery_Pack_Control_Unit_Init_Values</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, battery_pack_control_unit.o(.text.Battery_Pack_Control_Unit_Init_Values))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Battery_Pack_Control_Unit_Init_Values &rArr; Battery_Pack_Control_Unit_Read_Memory_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Pack_Control_Unit_Read_Memory_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Pack_Control_Unit_Init
</UL>

<P><STRONG><a name="[8e]"></a>Battery_Pack_Control_Unit_MCU_Init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, battery_pack_control_unit.o(.text.Battery_Pack_Control_Unit_MCU_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = Battery_Pack_Control_Unit_MCU_Init &rArr; MCU_Init &rArr; STM32F4_Init &rArr; STM32F4_Common_Init &rArr; STM32F4_SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Unit_MCU_Init
</UL>

<P><STRONG><a name="[8d]"></a>Battery_Pack_Control_Unit_Read_Memory_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, battery_pack_control_unit.o(.text.Battery_Pack_Control_Unit_Read_Memory_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Battery_Pack_Control_Unit_Read_Memory_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Flash_Read_Word
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Pack_Control_Unit_Init_Values
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>CAN1_Interrupt_DoTask</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, can_bus.o(.text.CAN1_Interrupt_DoTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CAN1_Interrupt_DoTask &rArr; Control_Unit_CAN1_Interrupt &rArr; Battery_Pack_Control_Unit_CAN1_Interrupt &rArr; Battery_Pack_Control_Unit_Cancel_Sensors &rArr; MCU_Flash_Program_Word &rArr; STM32F4_Flash_Program_Word &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Unit_CAN1_Interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[1e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.CAN1_RX0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = CAN1_RX0_IRQHandler &rArr; CAN1_Interrupt_DoTask &rArr; Control_Unit_CAN1_Interrupt &rArr; Battery_Pack_Control_Unit_CAN1_Interrupt &rArr; Battery_Pack_Control_Unit_Cancel_Sensors &rArr; MCU_Flash_Program_Word &rArr; STM32F4_Flash_Program_Word &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_Interrupt_DoTask
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_GetRxMessage
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>Control_Unit_CAN1_Interrupt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, control_unit.o(.text.Control_Unit_CAN1_Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Control_Unit_CAN1_Interrupt &rArr; Battery_Pack_Control_Unit_CAN1_Interrupt &rArr; Battery_Pack_Control_Unit_Cancel_Sensors &rArr; MCU_Flash_Program_Word &rArr; STM32F4_Flash_Program_Word &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Pack_Control_Unit_CAN1_Interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_Interrupt_DoTask
</UL>

<P><STRONG><a name="[94]"></a>Control_Unit_Init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, control_unit.o(.text.Control_Unit_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = Control_Unit_Init &rArr; Battery_Pack_Control_Unit_Init &rArr; LTC6811_Init_2 &rArr; LTC6811_wrcfg_2 &rArr; LTC681x_wrcfg_2 &rArr; write_68_2 &rArr; LTC6811_SPI_Write_Array_2 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Pack_Control_Unit_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[95]"></a>Control_Unit_MCU_Init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, control_unit.o(.text.Control_Unit_MCU_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = Control_Unit_MCU_Init &rArr; Battery_Pack_Control_Unit_MCU_Init &rArr; MCU_Init &rArr; STM32F4_Init &rArr; STM32F4_Common_Init &rArr; STM32F4_SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Pack_Control_Unit_MCU_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[96]"></a>Control_Unit_Timer_10ms_Interrupt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, control_unit.o(.text.Control_Unit_Timer_10ms_Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Control_Unit_Timer_10ms_Interrupt &rArr; Battery_Pack_Control_Unit_10ms_Interrupt &rArr; State_LEDs_10ms_Tick &rArr; Timer_10ms_Tick
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Pack_Control_Unit_10ms_Interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, stm32f4xx_hal_flash.o(.text.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetErrorCode
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[169]"></a>HAL_CAN_ActivateNotification</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_ActivateNotification))
<BR><BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_CAN1_Init
</UL>

<P><STRONG><a name="[9a]"></a>HAL_CAN_ConfigFilter</STRONG> (Thumb, 196 bytes, Stack size 20 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_ConfigFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_CAN_ConfigFilter
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_CAN1_Init
</UL>

<P><STRONG><a name="[ab]"></a>HAL_CAN_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[93]"></a>HAL_CAN_GetRxMessage</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_GetRxMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_CAN_GetRxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[92]"></a>HAL_CAN_IRQHandler</STRONG> (Thumb, 498 bytes, Stack size 40 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_CAN_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_ErrorCallback
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_WakeUpFromRxMsgCallback
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_SleepCallback
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo1FullCallback
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo0FullCallback
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo1MsgPendingCallback
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo0MsgPendingCallback
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox2CompleteCallback
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox2AbortCallback
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox1CompleteCallback
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox1AbortCallback
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox0CompleteCallback
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox0AbortCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[ac]"></a>HAL_CAN_Init</STRONG> (Thumb, 218 bytes, Stack size 16 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_CAN_Init &rArr; HAL_CAN_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_MspInit
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_CAN1_Init
</UL>

<P><STRONG><a name="[ad]"></a>HAL_CAN_MspInit</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, stm32f4xx_hal_msp.o(.text.HAL_CAN_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_CAN_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Init
</UL>

<P><STRONG><a name="[a7]"></a>HAL_CAN_RxFifo0FullCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_RxFifo0FullCallback))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[a5]"></a>HAL_CAN_RxFifo0MsgPendingCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_RxFifo0MsgPendingCallback))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[a8]"></a>HAL_CAN_RxFifo1FullCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_RxFifo1FullCallback))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[a6]"></a>HAL_CAN_RxFifo1MsgPendingCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_RxFifo1MsgPendingCallback))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[a9]"></a>HAL_CAN_SleepCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_SleepCallback))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[b2]"></a>HAL_CAN_Start</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_CAN_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_CAN1_Init
</UL>

<P><STRONG><a name="[9f]"></a>HAL_CAN_TxMailbox0AbortCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox0AbortCallback))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[a0]"></a>HAL_CAN_TxMailbox0CompleteCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox0CompleteCallback))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[a1]"></a>HAL_CAN_TxMailbox1AbortCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox1AbortCallback))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[a2]"></a>HAL_CAN_TxMailbox1CompleteCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox1CompleteCallback))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[a3]"></a>HAL_CAN_TxMailbox2AbortCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox2AbortCallback))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[a4]"></a>HAL_CAN_TxMailbox2CompleteCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox2CompleteCallback))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[aa]"></a>HAL_CAN_WakeUpFromRxMsgCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_WakeUpFromRxMsgCallback))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[5e]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f4xx_hal.o(.text.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_sleep_2
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_sleep
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ltc6811_dual.o(.text.LTC6811_Measure_Temperatures_and_Voltages)
</UL>
<P><STRONG><a name="[16e]"></a>HAL_FLASH_Lock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_hal_flash.o(.text.HAL_FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_Flash_Program_Word
</UL>

<P><STRONG><a name="[b4]"></a>HAL_FLASH_Program</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, stm32f4xx_hal_flash.o(.text.HAL_FLASH_Program))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program_DoubleWord
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program_HalfWord
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program_Word
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>

<P><STRONG><a name="[16d]"></a>HAL_FLASH_Unlock</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_hal_flash.o(.text.HAL_FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_Flash_Program_Word
</UL>

<P><STRONG><a name="[af]"></a>HAL_GPIO_Init</STRONG> (Thumb, 392 bytes, Stack size 56 bytes, stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_GPIO_Init_C9_Output
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_GPIO_Init_C8_Output
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_MspInit
</UL>

<P><STRONG><a name="[c9]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CS_High_2
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CS_Low_2
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CS_High_1
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CS_Low_1
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>

<P><STRONG><a name="[98]"></a>HAL_GetTick</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Start
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
</UL>

<P><STRONG><a name="[171]"></a>HAL_IncTick</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[b9]"></a>HAL_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f4xx_hal.o(.text.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_Common_Init
</UL>

<P><STRONG><a name="[bb]"></a>HAL_InitTick</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32f4xx_hal.o(.text.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[bc]"></a>HAL_MspInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f4xx_hal_msp.o(.text.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[b1]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ))
<BR><BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_MspInit
</UL>

<P><STRONG><a name="[b0]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_MspInit
</UL>

<P><STRONG><a name="[ba]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[bf]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 268 bytes, Stack size 24 bytes, stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_SystemClock_Config
</UL>

<P><STRONG><a name="[c1]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[c3]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 804 bytes, Stack size 32 bytes, stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_SystemClock_Config
</UL>

<P><STRONG><a name="[c5]"></a>HAL_SPI_Init</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, stm32f4xx_hal_spi.o(.text.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Initialize_2
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Initialize_1
</UL>

<P><STRONG><a name="[c6]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, stm32f4xx_hal_msp.o(.text.HAL_SPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[ca]"></a>HAL_SPI_TransmitReceive</STRONG> (Thumb, 404 bytes, Stack size 32 bytes, stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_SPI_Read_Byte_2
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_SPI_Read_Byte_1
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>

<P><STRONG><a name="[bd]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[e0]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[e2]"></a>HAL_TIMEx_CommutCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[170]"></a>HAL_TIMEx_MasterConfigSynchronization</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_TIM7_Init
</UL>

<P><STRONG><a name="[d3]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_27
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_46
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_TIM7_Init
</UL>

<P><STRONG><a name="[d6]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32f4xx_hal_msp.o(.text.HAL_TIM_Base_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[d9]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT))
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_10
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_TIM7_Init
</UL>

<P><STRONG><a name="[164]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_50
</UL>

<P><STRONG><a name="[dc]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 294 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_IRQHandler &rArr; OUTLINED_FUNCTION_32
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutCallback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_32
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_50
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
</UL>

<P><STRONG><a name="[15f]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_32
</UL>

<P><STRONG><a name="[160]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_32
</UL>

<P><STRONG><a name="[df]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[e1]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(.text.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[e3]"></a>LTC6811_CS_High_1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lt_spi.o(.text.LTC6811_CS_High_1))
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv_reg
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_68
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_68
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_sleep
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_idle
</UL>

<P><STRONG><a name="[e4]"></a>LTC6811_CS_High_2</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lt_spi.o(.text.LTC6811_CS_High_2))
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv_2_reg_2
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_68_2
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_68_2
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_sleep_2
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_idle_2
</UL>

<P><STRONG><a name="[e5]"></a>LTC6811_CS_Low_1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lt_spi.o(.text.LTC6811_CS_Low_1))
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_68
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_sleep
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_idle
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
</UL>

<P><STRONG><a name="[e6]"></a>LTC6811_CS_Low_2</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lt_spi.o(.text.LTC6811_CS_Low_2))
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_68_2
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_sleep_2
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_idle_2
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
</UL>

<P><STRONG><a name="[8b]"></a>LTC6811_Init_1</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, ltc6811_dual.o(.text.LTC6811_Init_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = LTC6811_Init_1 &rArr; LTC6811_wrcfg &rArr; LTC681x_wrcfg &rArr; write_68 &rArr; LTC6811_SPI_Write_Array_1 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_sleep
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Initialize_1
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_init_cfg
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_reset_crc_count
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_wrcfg
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_init_reg_limits
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Pack_Control_Unit_Init
</UL>

<P><STRONG><a name="[8c]"></a>LTC6811_Init_2</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, ltc6811_dual.o(.text.LTC6811_Init_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = LTC6811_Init_2 &rArr; LTC6811_wrcfg_2 &rArr; LTC681x_wrcfg_2 &rArr; write_68_2 &rArr; LTC6811_SPI_Write_Array_2 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_sleep_2
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Initialize_2
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr_2
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_init_cfg_2
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_reset_crc_count_2
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_wrcfg_2
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_init_reg_limits_2
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Pack_Control_Unit_Init
</UL>

<P><STRONG><a name="[e7]"></a>LTC6811_Initialize_1</STRONG> (Thumb, 24 bytes, Stack size 20 bytes, lt_spi.o(.text.LTC6811_Initialize_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 132 + Unknown Stack Size
<LI>Call Chain = LTC6811_Initialize_1 &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Init_1
</UL>

<P><STRONG><a name="[ee]"></a>LTC6811_Initialize_2</STRONG> (Thumb, 24 bytes, Stack size 20 bytes, lt_spi.o(.text.LTC6811_Initialize_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 132 + Unknown Stack Size
<LI>Call Chain = LTC6811_Initialize_2 &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Init_2
</UL>

<P><STRONG><a name="[f6]"></a>LTC6811_Measure_Temperatures_and_Voltages</STRONG> (Thumb, 712 bytes, Stack size 48 bytes, ltc6811_dual.o(.text.LTC6811_Measure_Temperatures_and_Voltages))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = LTC6811_Measure_Temperatures_and_Voltages &rArr; LTC_Disable_Balancing_2 &rArr; LTC6811_wrcfg_2 &rArr; LTC681x_wrcfg_2 &rArr; write_68_2 &rArr; LTC6811_SPI_Write_Array_2 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC_Disable_Balancing_2
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC_Active_Even_Balancing_2
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC_Disable_Balancing
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC_Active_Odd_Balancing
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC_Active_Even_Balancing
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC_Voltage_to_Temperature
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr_refon_2
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr_refon
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10a]"></a>LTC6811_SPI_Read_Byte_1</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lt_spi.o(.text.LTC6811_SPI_Read_Byte_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LTC6811_SPI_Read_Byte_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_idle
</UL>

<P><STRONG><a name="[10b]"></a>LTC6811_SPI_Read_Byte_2</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lt_spi.o(.text.LTC6811_SPI_Read_Byte_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LTC6811_SPI_Read_Byte_2 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wakeup_idle_2
</UL>

<P><STRONG><a name="[10c]"></a>LTC6811_SPI_Write_Array_1</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, lt_spi.o(.text.LTC6811_SPI_Write_Array_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LTC6811_SPI_Write_Array_1 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_68
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_47
</UL>

<P><STRONG><a name="[10e]"></a>LTC6811_SPI_Write_Array_2</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, lt_spi.o(.text.LTC6811_SPI_Write_Array_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LTC6811_SPI_Write_Array_2 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_68_2
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_48
</UL>

<P><STRONG><a name="[10f]"></a>LTC6811_SPI_Write_Read_1</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, lt_spi.o(.text.LTC6811_SPI_Write_Read_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LTC6811_SPI_Write_Read_1 &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
</UL>

<P><STRONG><a name="[112]"></a>LTC6811_SPI_Write_Read_2</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, lt_spi.o(.text.LTC6811_SPI_Write_Read_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LTC6811_SPI_Write_Read_2 &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
</UL>

<P><STRONG><a name="[113]"></a>LTC6811_adcv</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ltc6811.o(.text.LTC6811_adcv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = LTC6811_adcv &rArr; LTC681x_adcv &rArr; cmd_68 &rArr; OUTLINED_FUNCTION_47 &rArr; LTC6811_SPI_Write_Array_1 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_adcv
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
</UL>

<P><STRONG><a name="[115]"></a>LTC6811_adcv_2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ltc6811.o(.text.LTC6811_adcv_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = LTC6811_adcv_2 &rArr; LTC681x_adcv_2 &rArr; cmd_68_2 &rArr; OUTLINED_FUNCTION_48 &rArr; LTC6811_SPI_Write_Array_2 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_adcv_2
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
</UL>

<P><STRONG><a name="[e8]"></a>LTC6811_init_cfg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ltc6811.o(.text.LTC6811_init_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = LTC6811_init_cfg &rArr; LTC681x_init_cfg &rArr; LTC681x_set_cfgr &rArr; LTC681x_set_cfgr_dis
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_init_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Init_1
</UL>

<P><STRONG><a name="[ef]"></a>LTC6811_init_cfg_2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ltc6811.o(.text.LTC6811_init_cfg_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = LTC6811_init_cfg_2 &rArr; LTC681x_init_cfg_2 &rArr; LTC681x_set_cfgr_2 &rArr; LTC681x_set_cfgr_dis_2
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_init_cfg_2
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Init_2
</UL>

<P><STRONG><a name="[eb]"></a>LTC6811_init_reg_limits</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ltc6811.o(.text.LTC6811_init_reg_limits))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Init_1
</UL>

<P><STRONG><a name="[f2]"></a>LTC6811_init_reg_limits_2</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ltc6811.o(.text.LTC6811_init_reg_limits_2))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Init_2
</UL>

<P><STRONG><a name="[119]"></a>LTC6811_rdcv</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ltc6811.o(.text.LTC6811_rdcv))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = LTC6811_rdcv &rArr; LTC681x_rdcv &rArr; OUTLINED_FUNCTION_73 &rArr; LTC681x_rdcv_reg &rArr; OUTLINED_FUNCTION_23 &rArr; LTC6811_SPI_Write_Read_1 &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>

<P><STRONG><a name="[11b]"></a>LTC6811_rdcv_2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ltc6811.o(.text.LTC6811_rdcv_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = LTC6811_rdcv_2 &rArr; LTC681x_rdcv_2 &rArr; OUTLINED_FUNCTION_74 &rArr; LTC681x_rdcv_2_reg_2 &rArr; OUTLINED_FUNCTION_24 &rArr; LTC6811_SPI_Write_Read_2 &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv_2
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
</UL>

<P><STRONG><a name="[ea]"></a>LTC6811_reset_crc_count</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ltc6811.o(.text.LTC6811_reset_crc_count))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTC6811_reset_crc_count &rArr; LTC681x_reset_crc_count
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_reset_crc_count
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Init_1
</UL>

<P><STRONG><a name="[f1]"></a>LTC6811_reset_crc_count_2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ltc6811.o(.text.LTC6811_reset_crc_count_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTC6811_reset_crc_count_2 &rArr; LTC681x_reset_crc_count_2
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_reset_crc_count_2
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Init_2
</UL>

<P><STRONG><a name="[e9]"></a>LTC6811_set_cfgr</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, ltc6811.o(.text.LTC6811_set_cfgr))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LTC6811_set_cfgr &rArr; LTC681x_set_cfgr_dis
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_dis
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_gpio
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_adcopt
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_refon
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Init_1
</UL>

<P><STRONG><a name="[f0]"></a>LTC6811_set_cfgr_2</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, ltc6811.o(.text.LTC6811_set_cfgr_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LTC6811_set_cfgr_2 &rArr; LTC681x_set_cfgr_dis_2
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_dis_2
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_gpio_2
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_adcopt_2
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_refon_2
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Init_2
</UL>

<P><STRONG><a name="[127]"></a>LTC6811_set_cfgr_dis</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ltc6811.o(.text.LTC6811_set_cfgr_dis))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTC6811_set_cfgr_dis &rArr; LTC681x_set_cfgr_dis
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_dis
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC_Disable_Balancing
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC_Active_Odd_Balancing
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC_Active_Even_Balancing
</UL>

<P><STRONG><a name="[128]"></a>LTC6811_set_cfgr_dis_2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ltc6811.o(.text.LTC6811_set_cfgr_dis_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTC6811_set_cfgr_dis_2 &rArr; LTC681x_set_cfgr_dis_2
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_dis_2
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC_Disable_Balancing_2
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC_Active_Even_Balancing_2
</UL>

<P><STRONG><a name="[f7]"></a>LTC6811_set_cfgr_refon</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ltc6811.o(.text.LTC6811_set_cfgr_refon))
<BR><BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_refon
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Measure_Temperatures_and_Voltages
</UL>

<P><STRONG><a name="[f8]"></a>LTC6811_set_cfgr_refon_2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ltc6811.o(.text.LTC6811_set_cfgr_refon_2))
<BR><BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_refon_2
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Measure_Temperatures_and_Voltages
</UL>

<P><STRONG><a name="[ed]"></a>LTC6811_wrcfg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ltc6811.o(.text.LTC6811_wrcfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = LTC6811_wrcfg &rArr; LTC681x_wrcfg &rArr; write_68 &rArr; LTC6811_SPI_Write_Array_1 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_wrcfg
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC_Disable_Balancing
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC_Active_Odd_Balancing
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC_Active_Even_Balancing
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Init_1
</UL>

<P><STRONG><a name="[f4]"></a>LTC6811_wrcfg_2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ltc6811.o(.text.LTC6811_wrcfg_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = LTC6811_wrcfg_2 &rArr; LTC681x_wrcfg_2 &rArr; write_68_2 &rArr; LTC6811_SPI_Write_Array_2 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_wrcfg_2
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC_Disable_Balancing_2
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC_Active_Even_Balancing_2
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Init_2
</UL>

<P><STRONG><a name="[114]"></a>LTC681x_adcv</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, ltc681x.o(.text.LTC681x_adcv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = LTC681x_adcv &rArr; cmd_68 &rArr; OUTLINED_FUNCTION_47 &rArr; LTC6811_SPI_Write_Array_1 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_68
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_adcv
</UL>

<P><STRONG><a name="[116]"></a>LTC681x_adcv_2</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, ltc681x.o(.text.LTC681x_adcv_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = LTC681x_adcv_2 &rArr; cmd_68_2 &rArr; OUTLINED_FUNCTION_48 &rArr; LTC6811_SPI_Write_Array_2 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_68_2
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_adcv_2
</UL>

<P><STRONG><a name="[12e]"></a>LTC681x_check_pec</STRONG> (Thumb, 272 bytes, Stack size 20 bytes, ltc681x.o(.text.LTC681x_check_pec))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTC681x_check_pec
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_65
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv
</UL>

<P><STRONG><a name="[131]"></a>LTC681x_check_pec_2</STRONG> (Thumb, 272 bytes, Stack size 20 bytes, ltc681x.o(.text.LTC681x_check_pec_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTC681x_check_pec_2
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_65
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv_2
</UL>

<P><STRONG><a name="[117]"></a>LTC681x_init_cfg</STRONG> (Thumb, 72 bytes, Stack size 56 bytes, ltc681x.o(.text.LTC681x_init_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = LTC681x_init_cfg &rArr; LTC681x_set_cfgr &rArr; LTC681x_set_cfgr_dis
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_76
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_init_cfg
</UL>

<P><STRONG><a name="[118]"></a>LTC681x_init_cfg_2</STRONG> (Thumb, 72 bytes, Stack size 56 bytes, ltc681x.o(.text.LTC681x_init_cfg_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = LTC681x_init_cfg_2 &rArr; LTC681x_set_cfgr_2 &rArr; LTC681x_set_cfgr_dis_2
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_2
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_76
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_init_cfg_2
</UL>

<P><STRONG><a name="[11a]"></a>LTC681x_rdcv</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, ltc681x.o(.text.LTC681x_rdcv))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = LTC681x_rdcv &rArr; OUTLINED_FUNCTION_73 &rArr; LTC681x_rdcv_reg &rArr; OUTLINED_FUNCTION_23 &rArr; LTC6811_SPI_Write_Read_1 &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_cells
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_30
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_70
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_73
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_62
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_check_pec
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_rdcv
</UL>

<P><STRONG><a name="[11c]"></a>LTC681x_rdcv_2</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, ltc681x.o(.text.LTC681x_rdcv_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = LTC681x_rdcv_2 &rArr; OUTLINED_FUNCTION_74 &rArr; LTC681x_rdcv_2_reg_2 &rArr; OUTLINED_FUNCTION_24 &rArr; LTC6811_SPI_Write_Read_2 &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_cells_2
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_74
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_30
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_70
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_62
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_check_pec_2
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_rdcv_2
</UL>

<P><STRONG><a name="[13d]"></a>LTC681x_rdcv_2_reg_2</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, ltc681x.o(.text.LTC681x_rdcv_2_reg_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = LTC681x_rdcv_2_reg_2 &rArr; OUTLINED_FUNCTION_24 &rArr; LTC6811_SPI_Write_Read_2 &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_25
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CS_High_2
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_74
</UL>

<P><STRONG><a name="[141]"></a>LTC681x_rdcv_reg</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, ltc681x.o(.text.LTC681x_rdcv_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = LTC681x_rdcv_reg &rArr; OUTLINED_FUNCTION_23 &rArr; LTC6811_SPI_Write_Read_1 &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_25
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CS_High_1
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_73
</UL>

<P><STRONG><a name="[11d]"></a>LTC681x_reset_crc_count</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, ltc681x.o(.text.LTC681x_reset_crc_count))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTC681x_reset_crc_count
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_67
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_86
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_reset_crc_count
</UL>

<P><STRONG><a name="[11e]"></a>LTC681x_reset_crc_count_2</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, ltc681x.o(.text.LTC681x_reset_crc_count_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTC681x_reset_crc_count_2
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_67
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_86
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_reset_crc_count_2
</UL>

<P><STRONG><a name="[133]"></a>LTC681x_set_cfgr</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, ltc681x.o(.text.LTC681x_set_cfgr))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LTC681x_set_cfgr &rArr; LTC681x_set_cfgr_dis
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_dis
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_gpio
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_init_cfg
</UL>

<P><STRONG><a name="[134]"></a>LTC681x_set_cfgr_2</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, ltc681x.o(.text.LTC681x_set_cfgr_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LTC681x_set_cfgr_2 &rArr; LTC681x_set_cfgr_dis_2
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_dis_2
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_gpio_2
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_init_cfg_2
</UL>

<P><STRONG><a name="[120]"></a>LTC681x_set_cfgr_adcopt</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ltc681x.o(.text.LTC681x_set_cfgr_adcopt))
<BR><BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_43
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr
</UL>

<P><STRONG><a name="[124]"></a>LTC681x_set_cfgr_adcopt_2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ltc681x.o(.text.LTC681x_set_cfgr_adcopt_2))
<BR><BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_43
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr_2
</UL>

<P><STRONG><a name="[122]"></a>LTC681x_set_cfgr_dis</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, ltc681x.o(.text.LTC681x_set_cfgr_dis))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTC681x_set_cfgr_dis
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_72
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_75
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_42
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr_dis
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr
</UL>

<P><STRONG><a name="[126]"></a>LTC681x_set_cfgr_dis_2</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, ltc681x.o(.text.LTC681x_set_cfgr_dis_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTC681x_set_cfgr_dis_2
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_72
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_75
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_42
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_2
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr_dis_2
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr_2
</UL>

<P><STRONG><a name="[121]"></a>LTC681x_set_cfgr_gpio</STRONG> (Thumb, 30 bytes, Stack size 20 bytes, ltc681x.o(.text.LTC681x_set_cfgr_gpio))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTC681x_set_cfgr_gpio
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_80
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_52
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr
</UL>

<P><STRONG><a name="[125]"></a>LTC681x_set_cfgr_gpio_2</STRONG> (Thumb, 30 bytes, Stack size 20 bytes, ltc681x.o(.text.LTC681x_set_cfgr_gpio_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTC681x_set_cfgr_gpio_2
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_80
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_52
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_2
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr_2
</UL>

<P><STRONG><a name="[11f]"></a>LTC681x_set_cfgr_refon</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ltc681x.o(.text.LTC681x_set_cfgr_refon))
<BR><BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_33
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr_refon
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr
</UL>

<P><STRONG><a name="[123]"></a>LTC681x_set_cfgr_refon_2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ltc681x.o(.text.LTC681x_set_cfgr_refon_2))
<BR><BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_33
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr_refon_2
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr_2
</UL>

<P><STRONG><a name="[129]"></a>LTC681x_wrcfg</STRONG> (Thumb, 90 bytes, Stack size 280 bytes, ltc681x.o(.text.LTC681x_wrcfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = LTC681x_wrcfg &rArr; write_68 &rArr; LTC6811_SPI_Write_Array_1 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_68
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_15
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_wrcfg
</UL>

<P><STRONG><a name="[12a]"></a>LTC681x_wrcfg_2</STRONG> (Thumb, 90 bytes, Stack size 280 bytes, ltc681x.o(.text.LTC681x_wrcfg_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = LTC681x_wrcfg_2 &rArr; write_68_2 &rArr; LTC6811_SPI_Write_Array_2 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_68_2
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_15
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_wrcfg_2
</UL>

<P><STRONG><a name="[f9]"></a>LTC_Active_Even_Balancing</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, ltc6811_dual.o(.text.LTC_Active_Even_Balancing))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = LTC_Active_Even_Balancing &rArr; LTC6811_wrcfg &rArr; LTC681x_wrcfg &rArr; write_68 &rArr; LTC6811_SPI_Write_Array_1 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr_dis
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_wrcfg
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Measure_Temperatures_and_Voltages
</UL>

<P><STRONG><a name="[fa]"></a>LTC_Active_Even_Balancing_2</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, ltc6811_dual.o(.text.LTC_Active_Even_Balancing_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = LTC_Active_Even_Balancing_2 &rArr; LTC6811_wrcfg_2 &rArr; LTC681x_wrcfg_2 &rArr; write_68_2 &rArr; LTC6811_SPI_Write_Array_2 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr_dis_2
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_wrcfg_2
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Measure_Temperatures_and_Voltages
</UL>

<P><STRONG><a name="[105]"></a>LTC_Active_Odd_Balancing</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, ltc6811_dual.o(.text.LTC_Active_Odd_Balancing))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = LTC_Active_Odd_Balancing &rArr; LTC6811_wrcfg &rArr; LTC681x_wrcfg &rArr; write_68 &rArr; LTC6811_SPI_Write_Array_1 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr_dis
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_wrcfg
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Measure_Temperatures_and_Voltages
</UL>

<P><STRONG><a name="[108]"></a>LTC_Disable_Balancing</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, ltc6811_dual.o(.text.LTC_Disable_Balancing))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = LTC_Disable_Balancing &rArr; LTC6811_wrcfg &rArr; LTC681x_wrcfg &rArr; write_68 &rArr; LTC6811_SPI_Write_Array_1 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr_dis
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_wrcfg
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Measure_Temperatures_and_Voltages
</UL>

<P><STRONG><a name="[109]"></a>LTC_Disable_Balancing_2</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, ltc6811_dual.o(.text.LTC_Disable_Balancing_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = LTC_Disable_Balancing_2 &rArr; LTC6811_wrcfg_2 &rArr; LTC681x_wrcfg_2 &rArr; write_68_2 &rArr; LTC6811_SPI_Write_Array_2 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr_dis_2
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_wrcfg_2
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Measure_Temperatures_and_Voltages
</UL>

<P><STRONG><a name="[102]"></a>LTC_Voltage_to_Temperature</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, ltc6811_dual.o(.text.LTC_Voltage_to_Temperature))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Measure_Temperatures_and_Voltages
</UL>

<P><STRONG><a name="[86]"></a>MCU_Flash_Program_Word</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mcu.o(.text.MCU_Flash_Program_Word))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MCU_Flash_Program_Word &rArr; STM32F4_Flash_Program_Word &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_Flash_Program_Word
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Pack_Control_Unit_Cancel_Sensors
</UL>

<P><STRONG><a name="[85]"></a>MCU_Flash_Read_Word</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mcu.o(.text.MCU_Flash_Read_Word))
<BR><BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_Flash_Read_Word
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Pack_Control_Unit_Cancel_Sensors
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Pack_Control_Unit_Read_Memory_Init
</UL>

<P><STRONG><a name="[154]"></a>MCU_GPIO_Init_C8_Output</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mcu.o(.text.MCU_GPIO_Init_C8_Output))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MCU_GPIO_Init_C8_Output &rArr; STM32F4_GPIO_Init_C8_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_GPIO_Init_C8_Output
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;State_LEDs_Init
</UL>

<P><STRONG><a name="[156]"></a>MCU_GPIO_Init_C9_Output</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mcu.o(.text.MCU_GPIO_Init_C9_Output))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MCU_GPIO_Init_C9_Output &rArr; STM32F4_GPIO_Init_C9_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_GPIO_Init_C9_Output
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;State_LEDs_Init
</UL>

<P><STRONG><a name="[8f]"></a>MCU_Init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mcu.o(.text.MCU_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = MCU_Init &rArr; STM32F4_Init &rArr; STM32F4_Common_Init &rArr; STM32F4_SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Pack_Control_Unit_MCU_Init
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[168]"></a>STM32F4_CAN1_Init</STRONG> (Thumb, 132 bytes, Stack size 56 bytes, stm32f4.o(.text.STM32F4_CAN1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = STM32F4_CAN1_Init &rArr; HAL_CAN_Init &rArr; HAL_CAN_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_ActivateNotification
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Start
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_ConfigFilter
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Init
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_Common_Init
</UL>

<P><STRONG><a name="[16a]"></a>STM32F4_Common_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4.o(.text.STM32F4_Common_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = STM32F4_Common_Init &rArr; STM32F4_SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_TIM7_Init
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_CAN1_Init
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_SystemClock_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_Init
</UL>

<P><STRONG><a name="[152]"></a>STM32F4_Flash_Program_Word</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, stm32f4.o(.text.STM32F4_Flash_Program_Word))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = STM32F4_Flash_Program_Word &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Lock
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Unlock
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Flash_Program_Word
</UL>

<P><STRONG><a name="[153]"></a>STM32F4_Flash_Read_Word</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4.o(.text.STM32F4_Flash_Read_Word))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Flash_Read_Word
</UL>

<P><STRONG><a name="[155]"></a>STM32F4_GPIO_Init_C8_Output</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, stm32f4.o(.text.STM32F4_GPIO_Init_C8_Output))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = STM32F4_GPIO_Init_C8_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_GPIO_Init_C8_Output
</UL>

<P><STRONG><a name="[157]"></a>STM32F4_GPIO_Init_C9_Output</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, stm32f4.o(.text.STM32F4_GPIO_Init_C9_Output))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = STM32F4_GPIO_Init_C9_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_GPIO_Init_C9_Output
</UL>

<P><STRONG><a name="[158]"></a>STM32F4_Init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4.o(.text.STM32F4_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = STM32F4_Init &rArr; STM32F4_Common_Init &rArr; STM32F4_SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_Common_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_Init
</UL>

<P><STRONG><a name="[16b]"></a>STM32F4_SystemClock_Config</STRONG> (Thumb, 136 bytes, Stack size 88 bytes, stm32f4.o(.text.STM32F4_SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = STM32F4_SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_Common_Init
</UL>

<P><STRONG><a name="[16c]"></a>STM32F4_TIM7_Init</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f4.o(.text.STM32F4_TIM7_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = STM32F4_TIM7_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_Common_Init
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>State_LEDs_10ms_Tick</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, state_leds.o(.text.State_LEDs_10ms_Tick))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = State_LEDs_10ms_Tick &rArr; Timer_10ms_Tick
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_10ms_Tick
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Pack_Control_Unit_10ms_Interrupt
</UL>

<P><STRONG><a name="[88]"></a>State_LEDs_Init</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, state_leds.o(.text.State_LEDs_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = State_LEDs_Init &rArr; MCU_GPIO_Init_C8_Output &rArr; STM32F4_GPIO_Init_C8_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_GPIO_Init_C8_Output
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_GPIO_Init_C9_Output
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_10ms_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Pack_Control_Unit_Init
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>SystemInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_stm32f4xx.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(.text)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.TIM7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM7_IRQHandler &rArr; Control_Unit_Timer_10ms_Interrupt &rArr; Battery_Pack_Control_Unit_10ms_Interrupt &rArr; State_LEDs_10ms_Tick &rArr; Timer_10ms_Tick
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Unit_Timer_10ms_Interrupt
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[166]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
</UL>

<P><STRONG><a name="[5b]"></a>Timer_10ms_Init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, common_functions.o(.text.Timer_10ms_Init))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;State_LEDs_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> battery_pack_control_unit.o(.text.Battery_Pack_Control_Unit_Init)
</UL>
<P><STRONG><a name="[8a]"></a>Timer_10ms_Start</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, common_functions.o(.text.Timer_10ms_Start))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Pack_Control_Unit_Init
</UL>

<P><STRONG><a name="[5a]"></a>Timer_10ms_Tick</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, common_functions.o(.text.Timer_10ms_Tick))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Timer_10ms_Tick
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;State_LEDs_10ms_Tick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> battery_pack_control_unit.o(.text.Battery_Pack_Control_Unit_10ms_Interrupt)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f405xx.o(RESET)
</UL>
<P><STRONG><a name="[12c]"></a>cmd_68</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ltc681x.o(.text.cmd_68))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = cmd_68 &rArr; OUTLINED_FUNCTION_47 &rArr; LTC6811_SPI_Write_Array_1 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_47
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CS_High_1
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_adcv
</UL>

<P><STRONG><a name="[12d]"></a>cmd_68_2</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ltc681x.o(.text.cmd_68_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = cmd_68_2 &rArr; OUTLINED_FUNCTION_48 &rArr; LTC6811_SPI_Write_Array_2 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_48
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CS_High_2
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_adcv_2
</UL>

<P><STRONG><a name="[6c]"></a>main</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = main &rArr; LTC6811_Measure_Temperatures_and_Voltages &rArr; LTC_Disable_Balancing_2 &rArr; LTC6811_wrcfg_2 &rArr; LTC681x_wrcfg_2 &rArr; write_68_2 &rArr; LTC6811_SPI_Write_Array_2 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Measure_Temperatures_and_Voltages
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Unit_Init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_Unit_MCU_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[138]"></a>parse_cells</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, ltc681x.o(.text.parse_cells))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = parse_cells &rArr; OUTLINED_FUNCTION_11 &rArr; pec15_calc
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_77
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_37
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv
</UL>

<P><STRONG><a name="[13c]"></a>parse_cells_2</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, ltc681x.o(.text.parse_cells_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = parse_cells_2 &rArr; OUTLINED_FUNCTION_11 &rArr; pec15_calc
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_77
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_37
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv_2
</UL>

<P><STRONG><a name="[15c]"></a>pec15_calc</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ltc681x.o(.text.pec15_calc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pec15_calc
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_25
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_54
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
</UL>

<P><STRONG><a name="[5c]"></a>wakeup_idle</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ltc681x.o(.text.wakeup_idle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = wakeup_idle &rArr; LTC6811_SPI_Read_Byte_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_SPI_Read_Byte_1
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CS_High_1
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CS_Low_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ltc6811_dual.o(.text.LTC6811_Measure_Temperatures_and_Voltages)
</UL>
<P><STRONG><a name="[5d]"></a>wakeup_idle_2</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ltc681x.o(.text.wakeup_idle_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = wakeup_idle_2 &rArr; LTC6811_SPI_Read_Byte_2 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_SPI_Read_Byte_2
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CS_High_2
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CS_Low_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ltc6811_dual.o(.text.LTC6811_Measure_Temperatures_and_Voltages)
</UL>
<P><STRONG><a name="[ec]"></a>wakeup_sleep</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ltc681x.o(.text.wakeup_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = wakeup_sleep &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CS_High_1
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CS_Low_1
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Init_1
</UL>

<P><STRONG><a name="[f3]"></a>wakeup_sleep_2</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ltc681x.o(.text.wakeup_sleep_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = wakeup_sleep_2 &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CS_High_2
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CS_Low_2
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Init_2
</UL>

<P><STRONG><a name="[14f]"></a>write_68</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, ltc681x.o(.text.write_68))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = write_68 &rArr; LTC6811_SPI_Write_Array_1 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_79
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_83
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_66
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_54
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_38
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_SPI_Write_Array_1
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CS_High_1
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CS_Low_1
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_wrcfg
</UL>

<P><STRONG><a name="[150]"></a>write_68_2</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, ltc681x.o(.text.write_68_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = write_68_2 &rArr; LTC6811_SPI_Write_Array_2 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_79
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_83
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_66
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_54
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_38
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_SPI_Write_Array_2
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CS_High_2
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CS_Low_2
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_wrcfg_2
</UL>

<P><STRONG><a name="[101]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Measure_Temperatures_and_Voltages
</UL>

<P><STRONG><a name="[177]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[ff]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Measure_Temperatures_and_Voltages
</UL>

<P><STRONG><a name="[1b2]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[159]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>

<P><STRONG><a name="[17a]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[179]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[17b]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
</UL>

<P><STRONG><a name="[64]"></a>_fp_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[1b3]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[1b4]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[178]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[f5]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lt_spi.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Initialize_2
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Initialize_1
</UL>

<P><STRONG><a name="[10d]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lt_spi.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_SPI_Write_Read_2
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_SPI_Write_Read_1
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_SPI_Write_Array_2
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_SPI_Write_Array_1
</UL>

<P><STRONG><a name="[110]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lt_spi.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_SPI_Write_Read_2
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_SPI_Write_Read_1
</UL>

<P><STRONG><a name="[111]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lt_spi.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_2 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_SPI_Write_Read_2
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_SPI_Write_Read_1
</UL>

<P><STRONG><a name="[15d]"></a>OUTLINED_FUNCTION_16</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_16))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OUTLINED_FUNCTION_16 &rArr; pec15_calc
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pec15_calc
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_68_2
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_68
</UL>

<P><STRONG><a name="[142]"></a>OUTLINED_FUNCTION_8</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_8))
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CS_Low_1
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv_reg
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_68
</UL>

<P><STRONG><a name="[162]"></a>OUTLINED_FUNCTION_47</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_47))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = OUTLINED_FUNCTION_47 &rArr; LTC6811_SPI_Write_Array_1 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_SPI_Write_Array_1
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_68
</UL>

<P><STRONG><a name="[161]"></a>OUTLINED_FUNCTION_38</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_38))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OUTLINED_FUNCTION_38 &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_68_2
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_68
</UL>

<P><STRONG><a name="[165]"></a>OUTLINED_FUNCTION_54</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_54))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OUTLINED_FUNCTION_54 &rArr; pec15_calc
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pec15_calc
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_68_2
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_68
</UL>

<P><STRONG><a name="[174]"></a>OUTLINED_FUNCTION_66</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_66))
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_68_2
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_68
</UL>

<P><STRONG><a name="[175]"></a>OUTLINED_FUNCTION_83</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_83))
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_68_2
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_68
</UL>

<P><STRONG><a name="[15b]"></a>OUTLINED_FUNCTION_11</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_11))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OUTLINED_FUNCTION_11 &rArr; pec15_calc
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pec15_calc
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_cells_2
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_68_2
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_cells
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_68
</UL>

<P><STRONG><a name="[176]"></a>OUTLINED_FUNCTION_79</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_79))
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_68_2
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_68
</UL>

<P><STRONG><a name="[12b]"></a>OUTLINED_FUNCTION_22</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_22))
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_adcv_2
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_adcv
</UL>

<P><STRONG><a name="[13e]"></a>OUTLINED_FUNCTION_25</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_25))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OUTLINED_FUNCTION_25 &rArr; pec15_calc
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pec15_calc
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv_2_reg_2
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv_reg
</UL>

<P><STRONG><a name="[143]"></a>OUTLINED_FUNCTION_23</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_23))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = OUTLINED_FUNCTION_23 &rArr; LTC6811_SPI_Write_Read_1 &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_SPI_Write_Read_1
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv_reg
</UL>

<P><STRONG><a name="[172]"></a>OUTLINED_FUNCTION_37</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_37))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_cells_2
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_cells
</UL>

<P><STRONG><a name="[173]"></a>OUTLINED_FUNCTION_77</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_77))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_cells_2
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_cells
</UL>

<P><STRONG><a name="[135]"></a>OUTLINED_FUNCTION_62</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_62))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OUTLINED_FUNCTION_62 &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv_2
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv
</UL>

<P><STRONG><a name="[136]"></a>OUTLINED_FUNCTION_73</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_73))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = OUTLINED_FUNCTION_73 &rArr; LTC681x_rdcv_reg &rArr; OUTLINED_FUNCTION_23 &rArr; LTC6811_SPI_Write_Read_1 &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv
</UL>

<P><STRONG><a name="[137]"></a>OUTLINED_FUNCTION_21</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_21))
<BR><BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv_2
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv
</UL>

<P><STRONG><a name="[139]"></a>OUTLINED_FUNCTION_70</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_70))
<BR><BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv_2
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv
</UL>

<P><STRONG><a name="[13a]"></a>OUTLINED_FUNCTION_30</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_30))
<BR><BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv_2
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv
</UL>

<P><STRONG><a name="[12f]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_check_pec_2
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_check_pec
</UL>

<P><STRONG><a name="[130]"></a>OUTLINED_FUNCTION_65</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_65))
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_check_pec_2
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_check_pec
</UL>

<P><STRONG><a name="[14e]"></a>OUTLINED_FUNCTION_15</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_15))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_wrcfg_2
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_wrcfg
</UL>

<P><STRONG><a name="[144]"></a>OUTLINED_FUNCTION_86</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_86))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_reset_crc_count_2
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_reset_crc_count
</UL>

<P><STRONG><a name="[145]"></a>OUTLINED_FUNCTION_67</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_67))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_reset_crc_count_2
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_reset_crc_count
</UL>

<P><STRONG><a name="[132]"></a>OUTLINED_FUNCTION_76</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_76))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_init_cfg_2
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_init_cfg
</UL>

<P><STRONG><a name="[146]"></a>OUTLINED_FUNCTION_19</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_19))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_2
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr
</UL>

<P><STRONG><a name="[14d]"></a>OUTLINED_FUNCTION_33</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_33))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_refon_2
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_refon
</UL>

<P><STRONG><a name="[147]"></a>OUTLINED_FUNCTION_43</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_43))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_adcopt_2
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_adcopt
</UL>

<P><STRONG><a name="[14b]"></a>OUTLINED_FUNCTION_52</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_52))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_gpio_2
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_gpio
</UL>

<P><STRONG><a name="[14c]"></a>OUTLINED_FUNCTION_80</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_80))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_gpio_2
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_gpio
</UL>

<P><STRONG><a name="[148]"></a>OUTLINED_FUNCTION_42</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_42))
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_dis_2
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_dis
</UL>

<P><STRONG><a name="[149]"></a>OUTLINED_FUNCTION_75</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_75))
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_dis_2
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_dis
</UL>

<P><STRONG><a name="[14a]"></a>OUTLINED_FUNCTION_72</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_72))
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_dis_2
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_set_cfgr_dis
</UL>

<P><STRONG><a name="[13f]"></a>OUTLINED_FUNCTION_7</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_7))
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_CS_Low_2
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv_2_reg_2
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_68_2
</UL>

<P><STRONG><a name="[163]"></a>OUTLINED_FUNCTION_48</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_48))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = OUTLINED_FUNCTION_48 &rArr; LTC6811_SPI_Write_Array_2 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_SPI_Write_Array_2
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_68_2
</UL>

<P><STRONG><a name="[140]"></a>OUTLINED_FUNCTION_24</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_24))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = OUTLINED_FUNCTION_24 &rArr; LTC6811_SPI_Write_Read_2 &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_SPI_Write_Read_2
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv_2_reg_2
</UL>

<P><STRONG><a name="[13b]"></a>OUTLINED_FUNCTION_74</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ltc681x.o(.text.OUTLINED_FUNCTION_74))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = OUTLINED_FUNCTION_74 &rArr; LTC681x_rdcv_2_reg_2 &rArr; OUTLINED_FUNCTION_24 &rArr; LTC6811_SPI_Write_Read_2 &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv_2_reg_2
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC681x_rdcv_2
</UL>

<P><STRONG><a name="[151]"></a>OUTLINED_FUNCTION_8</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ltc6811_dual.o(.text.OUTLINED_FUNCTION_8))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC_Disable_Balancing_2
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC_Disable_Balancing
</UL>

<P><STRONG><a name="[fb]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ltc6811_dual.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = OUTLINED_FUNCTION_3 &rArr; LTC6811_adcv &rArr; LTC681x_adcv &rArr; cmd_68 &rArr; OUTLINED_FUNCTION_47 &rArr; LTC6811_SPI_Write_Array_1 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_adcv
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Measure_Temperatures_and_Voltages
</UL>

<P><STRONG><a name="[fc]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ltc6811_dual.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = OUTLINED_FUNCTION_4 &rArr; LTC6811_adcv_2 &rArr; LTC681x_adcv_2 &rArr; cmd_68_2 &rArr; OUTLINED_FUNCTION_48 &rArr; LTC6811_SPI_Write_Array_2 &rArr; OUTLINED_FUNCTION_1 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_adcv_2
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Measure_Temperatures_and_Voltages
</UL>

<P><STRONG><a name="[fd]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ltc6811_dual.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = OUTLINED_FUNCTION_2 &rArr; LTC6811_rdcv &rArr; LTC681x_rdcv &rArr; OUTLINED_FUNCTION_73 &rArr; LTC681x_rdcv_reg &rArr; OUTLINED_FUNCTION_23 &rArr; LTC6811_SPI_Write_Read_1 &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_rdcv
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Measure_Temperatures_and_Voltages
</UL>

<P><STRONG><a name="[fe]"></a>OUTLINED_FUNCTION_6</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ltc6811_dual.o(.text.OUTLINED_FUNCTION_6))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = OUTLINED_FUNCTION_6 &rArr; LTC6811_rdcv_2 &rArr; LTC681x_rdcv_2 &rArr; OUTLINED_FUNCTION_74 &rArr; LTC681x_rdcv_2_reg_2 &rArr; OUTLINED_FUNCTION_24 &rArr; LTC6811_SPI_Write_Read_2 &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_rdcv_2
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Measure_Temperatures_and_Voltages
</UL>

<P><STRONG><a name="[100]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ltc6811_dual.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OUTLINED_FUNCTION_0 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Measure_Temperatures_and_Voltages
</UL>

<P><STRONG><a name="[103]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ltc6811_dual.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr_refon
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Measure_Temperatures_and_Voltages
</UL>

<P><STRONG><a name="[104]"></a>OUTLINED_FUNCTION_7</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ltc6811_dual.o(.text.OUTLINED_FUNCTION_7))
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_set_cfgr_refon_2
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Measure_Temperatures_and_Voltages
</UL>

<P><STRONG><a name="[106]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ltc6811_dual.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = OUTLINED_FUNCTION_1 &rArr; LTC6811_rdcv &rArr; LTC681x_rdcv &rArr; OUTLINED_FUNCTION_73 &rArr; LTC681x_rdcv_reg &rArr; OUTLINED_FUNCTION_23 &rArr; LTC6811_SPI_Write_Read_1 &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_rdcv
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Measure_Temperatures_and_Voltages
</UL>

<P><STRONG><a name="[107]"></a>OUTLINED_FUNCTION_9</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ltc6811_dual.o(.text.OUTLINED_FUNCTION_9))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = OUTLINED_FUNCTION_9 &rArr; LTC6811_rdcv &rArr; LTC681x_rdcv &rArr; OUTLINED_FUNCTION_73 &rArr; LTC681x_rdcv_reg &rArr; OUTLINED_FUNCTION_23 &rArr; LTC6811_SPI_Write_Read_1 &rArr; OUTLINED_FUNCTION_2 &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_rdcv
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC6811_Measure_Temperatures_and_Voltages
</UL>

<P><STRONG><a name="[c8]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_hal_msp.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>

<P><STRONG><a name="[16f]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_GPIO_Init_C9_Output
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_GPIO_Init_C8_Output
</UL>

<P><STRONG><a name="[15a]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_GPIO_Init_C9_Output
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_GPIO_Init_C8_Output
</UL>

<P><STRONG><a name="[15e]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OUTLINED_FUNCTION_2 &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4_Flash_Program_Word
</UL>

<P><STRONG><a name="[c4]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[c0]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[b5]"></a>FLASH_Program_Byte</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_hal_flash.o(.text.FLASH_Program_Byte))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[b6]"></a>FLASH_Program_Word</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_hal_flash.o(.text.FLASH_Program_Word))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[b7]"></a>FLASH_Program_HalfWord</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_hal_flash.o(.text.FLASH_Program_HalfWord))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[b8]"></a>FLASH_Program_DoubleWord</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f4xx_hal_flash.o(.text.FLASH_Program_DoubleWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_Program_DoubleWord
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[99]"></a>FLASH_SetErrorCode</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, stm32f4xx_hal_flash.o(.text.FLASH_SetErrorCode))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[be]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>

<P><STRONG><a name="[ae]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Init
</UL>

<P><STRONG><a name="[b3]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Start
</UL>

<P><STRONG><a name="[9b]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_ConfigFilter
</UL>

<P><STRONG><a name="[9c]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_GetRxMessage
</UL>

<P><STRONG><a name="[9d]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_GetRxMessage
</UL>

<P><STRONG><a name="[9e]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_GetRxMessage
</UL>

<P><STRONG><a name="[d4]"></a>OUTLINED_FUNCTION_46</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(.text.OUTLINED_FUNCTION_46))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[d5]"></a>OUTLINED_FUNCTION_27</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(.text.OUTLINED_FUNCTION_27))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[d7]"></a>OUTLINED_FUNCTION_7</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(.text.OUTLINED_FUNCTION_7))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OUTLINED_FUNCTION_7 &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[d8]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[da]"></a>OUTLINED_FUNCTION_12</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(.text.OUTLINED_FUNCTION_12))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
</UL>

<P><STRONG><a name="[db]"></a>OUTLINED_FUNCTION_10</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(.text.OUTLINED_FUNCTION_10))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
</UL>

<P><STRONG><a name="[dd]"></a>OUTLINED_FUNCTION_50</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(.text.OUTLINED_FUNCTION_50))
<BR><BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[de]"></a>OUTLINED_FUNCTION_32</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(.text.OUTLINED_FUNCTION_32))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OUTLINED_FUNCTION_32
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[cb]"></a>OUTLINED_FUNCTION_16</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text.OUTLINED_FUNCTION_16))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>

<P><STRONG><a name="[cc]"></a>OUTLINED_FUNCTION_8</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text.OUTLINED_FUNCTION_8))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>

<P><STRONG><a name="[cd]"></a>OUTLINED_FUNCTION_20</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text.OUTLINED_FUNCTION_20))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>

<P><STRONG><a name="[ce]"></a>OUTLINED_FUNCTION_21</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text.OUTLINED_FUNCTION_21))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>

<P><STRONG><a name="[d0]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>

<P><STRONG><a name="[d2]"></a>SPI_EndRxTxTransaction</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>

<P><STRONG><a name="[167]"></a>SPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, stm32f4xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>

<P><STRONG><a name="[cf]"></a>OUTLINED_FUNCTION_24</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text.OUTLINED_FUNCTION_24))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>

<P><STRONG><a name="[d1]"></a>OUTLINED_FUNCTION_19</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text.OUTLINED_FUNCTION_19))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
