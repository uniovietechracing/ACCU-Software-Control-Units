/**
******************************************************************************
* @file           : Rear_Control_Unit.h
* @brief          : Rear Control Unit Functions header file
******************************************************************************
* @attention
*
* (c) 2024 Uniovi E-tech Racing.
* 
*
******************************************************************************  
******************************************************************************
															Version Control
******************************************************************************
******************************************************************************		
Version | dd mmm yyyy |       Who        | Description of changes
========|=============|==================|====================================
	1.0   | 01 MAR 2023 | Diego Rodríguez  | Creation
========|=============|==================|====================================

******************************************************************************
******************************************************************************
*/
#ifndef REAR_CONTROL_UNIT_H
#define REAR_CONTROL_UNIT_H

/*******************************************************************************
********************************************************************************
***************										 Includes                      ***************	
********************************************************************************
*******************************************************************************/
#include "MCU.h"
#include "Common_Functions.h"
#include "TypeDefs.h"
#include "Can_Bus.h"

/*******************************************************************************
********************************************************************************
***************										 DEVICE ID                     ***************	
********************************************************************************
*******************************************************************************/
#define DEVICE_ID 1



/*******************************************************************************
********************************************************************************
***************									 Microcontroller                 ***************	
********************************************************************************
*******************************************************************************/
#define STM32F4_MCU


/*******************************************************************************
********************************************************************************
***************										ADC CALIBRATION                ***************	
********************************************************************************
*******************************************************************************/
#define ADC_READ_AT_ON     		0xA00
#define ADC_READ_AT_OFF   	 	0x300




/*******************************************************************************
********************************************************************************
***************									Output Init       					  	 ***************	
********************************************************************************
*******************************************************************************/
void Precharge_Relay_Control_Init 								(void);
void Air_Plus_Relay_Control_Init 									(void);
void Air_Minus_Relay_Control_Init 								(void);
void Fan_Control_Init 														(void);
void BMS_Status_Control_Init 											(void);
	

/*******************************************************************************
********************************************************************************
***************									  Output On       					  	 ***************	
********************************************************************************
*******************************************************************************/
void Precharge_Relay_Control_On 									(Control_Unit_TypeDef* Control_Unit);
void Air_Plus_Relay_Control_On 										(Control_Unit_TypeDef* Control_Unit);
void Air_Minus_Relay_Control_On 									(Control_Unit_TypeDef* Control_Unit);
void Fan_Control_On 															(Control_Unit_TypeDef* Control_Unit);
void BMS_Status_Control_On 												(Control_Unit_TypeDef* Control_Unit);
	
	
/*******************************************************************************
********************************************************************************
***************									  Output Off       					  	 ***************	
********************************************************************************
*******************************************************************************/
void Precharge_Relay_Control_Off 									(Control_Unit_TypeDef* Control_Unit);
void Air_Plus_Relay_Control_Off 									(Control_Unit_TypeDef* Control_Unit);
void Air_Minus_Relay_Control_Off 									(Control_Unit_TypeDef* Control_Unit);
void Fan_Control_Off 															(Control_Unit_TypeDef* Control_Unit);
void BMS_Status_Control_Off 											(Control_Unit_TypeDef* Control_Unit);




/*******************************************************************************
********************************************************************************
***************							 			Input Init     								 ***************	
********************************************************************************
*******************************************************************************/
void BMS_Status_Init 											(void);
void SDC_Feedback_Init 										(void);


/*******************************************************************************
********************************************************************************
***************							 			Input reading     						 ***************	
********************************************************************************
*******************************************************************************/
void BMS_Status_And_Relay_State_Read			(Control_Unit_TypeDef* Control_Unit);
BoolTypeDef SDC_Feedback_Read 						(Control_Unit_TypeDef* Control_Unit);




/*******************************************************************************
********************************************************************************
***************									   ADC Read        			         ***************	
********************************************************************************
*******************************************************************************/
void Precharge_Relay_ADC_Init 						(void);
void Air_Plus_Relay_ADC_Init 							(void);
void Air_Minus_Relay_ADC_Init 						(void);
void HV_Feedback_ADC_Init 								(void);



/*******************************************************************************
********************************************************************************
***************									 MCU INIT        			 		       ***************	
********************************************************************************
*******************************************************************************/
void Accu_Master_Control_Unit_MCU_Init(void);


/*******************************************************************************
********************************************************************************
***************						 		Control Unit INIT        			 		 ***************	
********************************************************************************
*******************************************************************************/
void Accu_Master_Control_Unit_Task_Init(Control_Unit_TypeDef* Control_Unit);


/*******************************************************************************
********************************************************************************
***************									 Main_Task        			 		     ***************	
********************************************************************************
*******************************************************************************/
void Accu_Master_Control_Unit_WDT_Task(void);
void Accu_Master_Control_Unit_State_Machine_Task(Control_Unit_TypeDef* Control_Unit);
void Accu_Master_Control_Unit_Main_Task(Control_Unit_TypeDef* Control_Unit);


/*******************************************************************************
********************************************************************************
***************							 Timer 10ms Interrupt        		     ***************	
********************************************************************************
*******************************************************************************/
void Accu_Master_Control_Unit_10ms_Interrupt(Control_Unit_TypeDef* Control_Unit);


/*******************************************************************************
********************************************************************************
***************									 Interrupt Task        			 	 ***************	
********************************************************************************
*******************************************************************************/
void Accu_Master_Control_Unit_Interrupt_Task	(Control_Unit_TypeDef* Control_Unit);


/*******************************************************************************
********************************************************************************
***************									 CAN BUS Interrupt      		     ***************	
********************************************************************************
*******************************************************************************/
void Accu_Master_Control_Unit_CAN1_Interrupt(Control_Unit_TypeDef* Control_Unit);
void Accu_Master_Control_Unit_CAN2_Interrupt(Control_Unit_TypeDef* Control_Unit);


/*******************************************************************************
********************************************************************************
***************									 Inyerrupt Tasks        			 	 ***************	
********************************************************************************
*******************************************************************************/
void CAN_Status_Send_Interrupt_Task		(Control_Unit_TypeDef* Control_Unit);
void Precharge_CAN_Received_Interrupt_Task(Control_Unit_TypeDef* Control_Unit);
void Precharge_Status_Send_Interrupt_Task(Control_Unit_TypeDef* Control_Unit);
void ADCs_Reading_Interrupt_Task(Control_Unit_TypeDef* Control_Unit);
void Temp_Timeout_Interrupt_Task(Control_Unit_TypeDef* Control_Unit);

/*******************************************************************************
********************************************************************************
***************									 CAN messages generation      	***************	
********************************************************************************
*******************************************************************************/
void Generate_BMS_Master_Status_Message(Control_Unit_TypeDef* Control_Unit);
void Generate_Precarge_Status_Message(Control_Unit_TypeDef* Control_Unit);
void Generate_Done_Precharge_Message(Control_Unit_TypeDef* Control_Unit);
void Generate_Ready_To_Drive_Message(Control_Unit_TypeDef* Control_Unit);


/*******************************************************************************
********************************************************************************
***************									 CAN BUS PROCESS FRAMES      		 ***************	
********************************************************************************
*******************************************************************************/
void Proccess_Start_Precharge_Frame(Control_Unit_TypeDef* Control_Unit);
void Proccess_Fan_Control_Frame(Control_Unit_TypeDef* Control_Unit);
void Proccess_Thermistor_Frame(Control_Unit_TypeDef* Control_Unit);


/*******************************************************************************
********************************************************************************
***************				 			Proccess ADCs Reading            		 ***************	
********************************************************************************
*******************************************************************************/
void Proccess_ADCs_Reading(Control_Unit_TypeDef* Control_Unit);


/*******************************************************************************
********************************************************************************
***************				 			Thermistor Module            		 		 ***************	
********************************************************************************
*******************************************************************************/
void Thermistor_Module_Init(Control_Unit_TypeDef* Control_Unit);



#endif
/*****************************************************************************
** 																END OF FILE																**			
******************************************************************************
******************************************************************************
* @file           : Rear_Control_Unit.h
* @brief          : Rear Control Unit Functions header file
******************************************************************************
* @attention
*
* (c) 2024 Uniovi E-tech Racing.
* 
*
******************************************************************************  
******************************************************************************
															Version Control
******************************************************************************
******************************************************************************		
Version | dd mmm yyyy |       Who        | Description of changes
========|=============|==================|====================================
	1.0   | 01 MAR 2023 | Diego Rodríguez  | Creation
========|=============|==================|====================================

******************************************************************************
******************************************************************************
*/



